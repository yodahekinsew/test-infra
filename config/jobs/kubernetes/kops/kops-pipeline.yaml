# Test scenarios generated by build-pipeline.py (do not manually edit)
periodics:

# {"branch": "master", "k8s_version": "1.19"}
# Verify the latest-ci version from the master branch of kops
# Runs a small subset of the e2e tests.
# Publishes the version to latest-ci-updown-green on success.
- interval: 60m
  name: e2e-kops-pipeline-updown-kopsmaster
  decorate: true
  decoration_config:
    timeout: 45m
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-1.19
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --up
      - --test
      - --down
      - --dump=$(ARTIFACTS)
      - --timeout=45m
      - --gcp-service-account=$(E2E_GOOGLE_APPLICATION_CREDENTIALS)
      # kops-specific test args
      - --deployment=kops
      - --provider=aws
      - --cluster=e2e-kops-pipeline-updown-kopsmaster.test-cncf-aws.k8s.io
      - --kops-ssh-user=ubuntu
      - --kops-nodes=4
      - --extract=release/latest-1.19
      - --kops-state=s3://k8s-kops-prow/
      - --kops-ssh-key=$(AWS_SSH_PRIVATE_KEY_FILE)
      - --kops-ssh-public-key=$(AWS_SSH_PUBLIC_KEY_FILE)
      - --kops-publish=gs://k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt
      - --kops-version=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci.txt
      #- --kops-kubernetes-version should be inferred by kubetest from --extract
      #- --kops-zone should be randomized by kubetest
      # Specific test args
      - --test_args=--ginkgo.focus=\[k8s.io\]\sNetworking.*\[Conformance\] --ginkgo.skip=\[Slow\]|\[Serial\]
      - --ginkgo-parallel
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-kops, google-aws, kops-misc, kops-k8s-1.19
    testgrid-tab-name: kops-pipeline-updown-master

# {"branch": "1.16", "k8s_version": "1.16"}
# Verify the latest-ci version from the release-1.16 branch of kops
# Runs a small subset of the e2e tests.
# Publishes the version to latest-ci-updown-green on success.
- interval: 60m
  name: e2e-kops-pipeline-updown-kops116
  decorate: true
  decoration_config:
    timeout: 45m
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-1.16
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --up
      - --test
      - --down
      - --dump=$(ARTIFACTS)
      - --timeout=45m
      - --gcp-service-account=$(E2E_GOOGLE_APPLICATION_CREDENTIALS)
      # kops-specific test args
      - --deployment=kops
      - --provider=aws
      - --cluster=e2e-kops-pipeline-updown-kops116.test-cncf-aws.k8s.io
      - --kops-ssh-user=admin
      - --kops-nodes=4
      - --extract=release/stable-1.16
      - --kops-state=s3://k8s-kops-prow/
      - --kops-ssh-key=$(AWS_SSH_PRIVATE_KEY_FILE)
      - --kops-ssh-public-key=$(AWS_SSH_PUBLIC_KEY_FILE)
      - --kops-publish=gs://k8s-staging-kops/kops/releases/markers/release-1.16/latest-ci-updown-green.txt
      - --kops-version=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/release-1.16/latest-ci.txt
      #- --kops-kubernetes-version should be inferred by kubetest from --extract
      #- --kops-zone should be randomized by kubetest
      # Specific test args
      - --test_args=--ginkgo.focus=\[k8s.io\]\sNetworking.*\[Conformance\] --ginkgo.skip=\[Slow\]|\[Serial\]
      - --ginkgo-parallel
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-kops, google-aws, kops-misc, kops-k8s-1.16
    testgrid-tab-name: kops-pipeline-updown-1.16

# {"branch": "1.17", "k8s_version": "1.17"}
# Verify the latest-ci version from the release-1.17 branch of kops
# Runs a small subset of the e2e tests.
# Publishes the version to latest-ci-updown-green on success.
- interval: 60m
  name: e2e-kops-pipeline-updown-kops117
  decorate: true
  decoration_config:
    timeout: 45m
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-1.17
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --up
      - --test
      - --down
      - --dump=$(ARTIFACTS)
      - --timeout=45m
      - --gcp-service-account=$(E2E_GOOGLE_APPLICATION_CREDENTIALS)
      # kops-specific test args
      - --deployment=kops
      - --provider=aws
      - --cluster=e2e-kops-pipeline-updown-kops117.test-cncf-aws.k8s.io
      - --kops-ssh-user=admin
      - --kops-nodes=4
      - --extract=release/stable-1.17
      - --kops-state=s3://k8s-kops-prow/
      - --kops-ssh-key=$(AWS_SSH_PRIVATE_KEY_FILE)
      - --kops-ssh-public-key=$(AWS_SSH_PUBLIC_KEY_FILE)
      - --kops-publish=gs://k8s-staging-kops/kops/releases/markers/release-1.17/latest-ci-updown-green.txt
      - --kops-version=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/release-1.17/latest-ci.txt
      #- --kops-kubernetes-version should be inferred by kubetest from --extract
      #- --kops-zone should be randomized by kubetest
      # Specific test args
      - --test_args=--ginkgo.focus=\[k8s.io\]\sNetworking.*\[Conformance\] --ginkgo.skip=\[Slow\]|\[Serial\]
      - --ginkgo-parallel
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-kops, google-aws, kops-misc, kops-k8s-1.17
    testgrid-tab-name: kops-pipeline-updown-1.17

# {"branch": "1.18", "k8s_version": "1.18"}
# Verify the latest-ci version from the release-1.18 branch of kops
# Runs a small subset of the e2e tests.
# Publishes the version to latest-ci-updown-green on success.
- interval: 60m
  name: e2e-kops-pipeline-updown-kops118
  decorate: true
  decoration_config:
    timeout: 45m
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-1.18
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --up
      - --test
      - --down
      - --dump=$(ARTIFACTS)
      - --timeout=45m
      - --gcp-service-account=$(E2E_GOOGLE_APPLICATION_CREDENTIALS)
      # kops-specific test args
      - --deployment=kops
      - --provider=aws
      - --cluster=e2e-kops-pipeline-updown-kops118.test-cncf-aws.k8s.io
      - --kops-ssh-user=ubuntu
      - --kops-nodes=4
      - --extract=release/stable-1.18
      - --kops-state=s3://k8s-kops-prow/
      - --kops-ssh-key=$(AWS_SSH_PRIVATE_KEY_FILE)
      - --kops-ssh-public-key=$(AWS_SSH_PUBLIC_KEY_FILE)
      - --kops-publish=gs://k8s-staging-kops/kops/releases/markers/release-1.18/latest-ci-updown-green.txt
      - --kops-version=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/release-1.18/latest-ci.txt
      #- --kops-kubernetes-version should be inferred by kubetest from --extract
      #- --kops-zone should be randomized by kubetest
      # Specific test args
      - --test_args=--ginkgo.focus=\[k8s.io\]\sNetworking.*\[Conformance\] --ginkgo.skip=\[Slow\]|\[Serial\]
      - --ginkgo-parallel
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-kops, google-aws, kops-misc, kops-k8s-1.18
    testgrid-tab-name: kops-pipeline-updown-1.18
