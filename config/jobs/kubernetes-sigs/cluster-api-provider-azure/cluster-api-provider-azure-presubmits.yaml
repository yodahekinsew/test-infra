presubmits:
  kubernetes-sigs/cluster-api-provider-azure:
  - name: pull-cluster-api-provider-azure-test
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-experimental
        command:
        - "./scripts/ci-test.sh"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: pr-test
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-build
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-experimental
        command:
        - "./scripts/ci-build.sh"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: pr-build
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-integration
    always_run: true
    optional: true
    decorate: true
    labels:
      preset-dind-enabled: "true"
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-experimental
        command:
        - "runner.sh"
        - "./scripts/ci-integration.sh"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: pr-integration
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: true
    optional: false
    decorate: true
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-experimental
        command:
        - "runner.sh"
        - "./scripts/ci-e2e.sh"
        env:
          - name: GINKGO_FOCUS
            value: "Workload cluster creation"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: pr-e2e
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-capi-e2e
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-experimental
        command:
        - "runner.sh"
        - "./scripts/ci-e2e.sh"
        env:
          - name: GINKGO_FOCUS
            value: "Cluster API E2E tests"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capi-pr-e2e
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-verify
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-experimental
        command:
        - "runner.sh"
        - "make"
        - "verify"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: verify
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-bazel-verify
    always_run: true
    optional: false
    decorate: true
    branches:
      - ^release-0.2$
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-experimental
        imagePullPolicy: Always
        command:
        - "./hack/verify-bazel.sh"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: bazel-pr-verify
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-bazel-test
    always_run: true
    optional: false
    decorate: true
    branches:
      - ^release-0.2$
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-experimental
        imagePullPolicy: Always
        command:
        - "./scripts/ci-bazel-test.sh"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: bazel-pr-test
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-bazel-build
    always_run: true
    optional: false
    decorate: true
    branches:
      - ^release-0.2$
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-experimental
        imagePullPolicy: Always
        command:
        - "./scripts/ci-bazel-build.sh"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: bazel-pr-build
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-verify-boilerplate
    always_run: true
    optional: false
    decorate: true
    branches:
      - ^release-0.2$
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-experimental
        imagePullPolicy: Always
        command:
        - "./hack/verify_boilerplate.py"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: verify-boilerplate
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-conformance-v1alpha3
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred: "true"
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    spec:
      containers:
        - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
          command:
            - "runner.sh"
            - "./scripts/ci-entrypoint.sh"
          env:
            - name: FOCUS
              value: "\\[Conformance\\]|\\[NodeConformance\\]"
            - name: SKIP
              value: "\\[Slow\\]|\\[Serial\\]|\\[Flaky\\]"
            - name: PARALLEL
              value: "true"
            - name: USE_CI_ARTIFACTS
              value: "true"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 1
              memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: pull-conformance-v1alpha3
  - name: pull-cluster-api-provider-azure-conformance-machine-pool-v1alpha3
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred: "true"
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    spec:
      containers:
        - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
          command:
            - "runner.sh"
            - "./scripts/ci-entrypoint.sh"
          env:
            - name: FOCUS
              value: "\\[Conformance\\]|\\[NodeConformance\\]"
            - name: SKIP
              value: "\\[Slow\\]|\\[Serial\\]|\\[Flaky\\]"
            - name: PARALLEL
              value: "true"
            - name: USE_CI_ARTIFACTS
              value: "true"
            - name: EXP_MACHINE_POOL
              value: "true"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 1
              memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: pull-conformance-machine-pool-v1alpha3
  - name: pull-cluster-api-provider-azure-apidiff
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    always_run: true
    optional: true
    labels:
      preset-service-account: "true"
    skip_branches:
    - release-0.3
    spec:
      containers:
      - command:
        - runner.sh
        - ./scripts/ci-apidiff.sh
        image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: pr-apidiff
