presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-bazel-build
    decorate: true
    always_run: true
    skip_branches:
    - release-\d+.\d+ # per-release job
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    extra_refs:
    - base_ref: master
      org: kubernetes
      repo: test-infra
    spec:
      containers:
      - image: gcr.io/k8s-testimages/launcher.gcr.io/google/bazel:2.2.0-from-0.23.2
        command:
        - bash
        args:
        - -c
        - |
          ../test-infra/hack/bazel.sh build --config=remote --remote_instance_name=projects/k8s-prow-builds/instances/default_instance -- //... -//vendor/... -//build/... //build/release-tars
  - name: pull-kubernetes-bazel-test
    decorate: true
    always_run: true
    skip_branches:
    - release-\d+.\d+ # per-release job
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    extra_refs:
    - base_ref: master
      org: kubernetes
      repo: test-infra
    spec:
      containers:
      - image: gcr.io/k8s-testimages/launcher.gcr.io/google/bazel:2.2.0-from-0.23.2
        command:
        - ../test-infra/hack/bazel.sh
        args:
        - test
        - --config=unit
        - --config=remote
        - --remote_instance_name=projects/k8s-prow-builds/instances/default_instance
        - //...
        - --
        - -//build/...
        - -//vendor/...
postsubmits:
  kubernetes/kubernetes:
  - name: ci-kubernetes-bazel-build
    branches:
    - master
    annotations:
      fork-per-release: "true"
      testgrid-dashboards: google-unit
      description: "Builds kubernetes using bazel"
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        resources:
          requests:
            memory: "6Gi"
    rerun_auth_config:
      github_team_ids:
        - 2241179 # release-managers
  - name: post-kubernetes-bazel-build
    branches:
    - master
    decorate: true
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    extra_refs:
    - base_ref: master
      org: kubernetes
      repo: test-infra
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
        command:
        - bash
        args:
        - -c
        - |
          set -o errexit
          gcloud auth activate-service-account --key-file=/etc/service-account/service-account.json
          ../test-infra/scenarios/kubernetes_bazel.py \
              --config=ci \
              "--build=//... -//vendor/..." \
              --release=//build/release-tars \
              --gcs=gs://kubernetes-release-dev/ci-rbe \
              --version-suffix=-bazel-rbe

    annotations:
      testgrid-dashboards: sig-release-master-informing
      testgrid-tab-name: bazel-build-master
      description: 'OWNER: sig-testing; Builds kubernetes at each bommit using bazel with RBE'
  - name: ci-kubernetes-bazel-test # TODO(fejta): delete after 1m (dup of post-kubernetes-bazel-test)
    decorate: true
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    annotations:
      testgrid-alert-email: kubernetes-sig-testing-alerts@googlegroups.com, k8s-infra-oncall@google.com
      testgrid-dashboards: google-unit
    extra_refs:
    - base_ref: master
      org: kubernetes
      repo: test-infra
    skip_branches:
    - release-\d+.\d+ # per-release job
    spec:
      containers:
      - image: gcr.io/k8s-testimages/launcher.gcr.io/google/bazel:2.2.0-from-0.23.2
        command:
        - ../test-infra/hack/bazel.sh
        args:
        - test
        - --config=unit
        - --config=remote
        - --remote_instance_name=projects/k8s-prow-builds/instances/default_instance
        - //...
        - //hack:verify-all
        - --
        - -//build/...
        - -//vendor/...

  - name: post-kubernetes-bazel-test
    decorate: true
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    annotations:
      fork-per-release: "true"
      testgrid-alert-email: kubernetes-sig-testing-alerts@googlegroups.com, k8s-infra-oncall@google.com
      testgrid-dashboards: sig-release-master-informing, google-unit
      description: 'OWNER: sig-testing; Runs kubernetes unit tests at each commit using bazel'
    extra_refs:
    - base_ref: master
      org: kubernetes
      repo: test-infra
    skip_branches:
    - release-\d+.\d+ # per-release job
    spec:
      containers:
      - image: gcr.io/k8s-testimages/launcher.gcr.io/google/bazel:2.2.0-from-0.23.2
        command:
        - ../test-infra/hack/bazel.sh
        args:
        - test
        - --config=unit
        - --config=remote
        - --remote_instance_name=projects/k8s-prow-builds/instances/default_instance
        - //...
        - //hack:verify-all
        - --
        - -//build/...
        - -//vendor/...

periodics:
# periodic bazel build jobs
- name: periodic-kubernetes-bazel-build-master
  annotations:
    fork-per-release: "true"
    fork-per-release-replacements: "latest-bazel.txt -> latest-bazel-{{.Version}}.txt"
    fork-per-release-periodic-interval: 6h
    testgrid-alert-email: kubernetes-sig-testing-alerts@googlegroups.com, k8s-infra-oncall@google.com
    testgrid-dashboards: sig-release-master-blocking, google-unit
    testgrid-tab-name: bazel-build-master
    description: run bazel build //... -//vendor/...
  interval: 5m
  decorate: true
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  extra_refs:
  - base_ref: master
    org: kubernetes
    repo: kubernetes
  - base_ref: master
    org: kubernetes
    repo: test-infra
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - bash
      args:
      - -c
      - |
        set -o errexit
        gcloud auth activate-service-account --key-file=/etc/service-account/service-account.json
        ../test-infra/scenarios/kubernetes_bazel.py \
            --config=ci \
            "--build=//... -//vendor/..." \
            --release=//build/release-tars \
            --gcs=gs://kubernetes-release-dev/ci-periodic \
            --version-suffix=-bazel
  rerun_auth_config:
    github_team_ids:
      - 2241179 # release-managers

- name: periodic-kubernetes-bazel-build-canary
  annotations:
    testgrid-dashboards: sig-testing-canaries
    testgrid-tab-name: bazel-build
    description: run kubernetes-bazel-build with latest image
  interval: 1h
  decorate: true
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  # do not fork
  extra_refs:
  - base_ref: master
    org: kubernetes
    repo: kubernetes
  - base_ref: master
    org: kubernetes
    repo: test-infra
  spec:
    containers:
    - image: gcr.io/k8s-testimages/launcher.gcr.io/google/bazel:2.2.0-from-0.23.2
      imagePullPolicy: Always
      command:
      - bash
      args:
      - -c
      - |
        set -o errexit
        gcloud auth activate-service-account --key-file=/etc/service-account/service-account.json
        ../test-infra/scenarios/kubernetes_bazel.py \
            --config=ci \
            "--build=//... -//vendor/..." \
            --release=//build/release-tars \
            --gcs=gs://kubernetes-release-dev/ci-canary \
            --version-suffix=-bazel
  rerun_auth_config:
    github_team_ids:
      - 2241179 # release-managers

# periodic bazel test jobs
- name: periodic-kubernetes-bazel-test-master
  annotations:
    fork-per-release: "true"
    fork-per-release-periodic-interval: 6h
    testgrid-alert-email: kubernetes-sig-testing-alerts@googlegroups.com, k8s-infra-oncall@google.com
    testgrid-dashboards: sig-release-master-blocking, google-unit
    testgrid-tab-name: bazel-test-master
    description: "runs bazel test //... //hack:verify-all -//build/... -//vendor/..."
  interval: 5m
  decorate: true
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  extra_refs:
  - base_ref: master
    org: kubernetes
    repo: kubernetes
  - base_ref: master
    org: kubernetes
    repo: test-infra
  spec:
    containers:
    - image: gcr.io/k8s-testimages/launcher.gcr.io/google/bazel:2.2.0-from-0.23.2
      command:
      - ../test-infra/hack/bazel.sh
      args:
      - test
      - --config=unit
      - --config=remote
      - --remote_instance_name=projects/k8s-prow-builds/instances/default_instance
      - //...
      - //hack:verify-all
      - --
      - -//build/...
      - -//vendor/...
- name: periodic-kubernetes-bazel-test-canary
  annotations:
    testgrid-dashboards: sig-testing-canaries
    testgrid-tab-name: bazel-test
    description: run kubernetes-bazel-test with latest image
  interval: 1h
  decorate: true
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  extra_refs:
  - base_ref: master
    org: kubernetes
    repo: kubernetes
  - base_ref: master
    org: kubernetes
    repo: test-infra
  spec:
    containers:
    - image: gcr.io/k8s-testimages/launcher.gcr.io/google/bazel:2.2.0-from-0.23.2
      command:
      - ../test-infra/hack/bazel.sh
      args:
      - test
      - --config=unit
      - --config=remote
      - --remote_instance_name=projects/k8s-prow-builds/instances/default_instance
      - //...
      - //hack:verify-all
      - --
      - -//build/...
      - -//vendor/...
