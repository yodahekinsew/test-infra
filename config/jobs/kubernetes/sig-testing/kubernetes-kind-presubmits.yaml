presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-e2e-kind
    optional: false
    always_run: true
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/krte:v20200712-5349a04-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: FOCUS
          value: "."
        # TODO(bentheelder): reduce the skip list further
        - name: SKIP
          value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|LoadBalancer|load.balancer|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|Conntrack|udp|UDP|NFS|nfs|inline.execution.and.attach|should.be.rejected.when.no.endpoints.exist
        - name: PARALLEL
          value: "true"
        - name: BUILD_TYPE
          value: bazel
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "9000Mi"
            cpu: 7500m
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
      fork-per-release: "true"


  - name: pull-kubernetes-e2e-kind-canary
    optional: true
    always_run: false # manual for testing new configurations
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/krte:latest-master
        imagePullPolicy: Always # pull latest image for canary testing
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: FOCUS
          value: "."
        # TODO(bentheelder): reduce the skip list further
        - name: SKIP
          value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|LoadBalancer|load.balancer|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing
        - name: PARALLEL
          value: "true"
        - name: BUILD_TYPE
          value: bazel
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "9000Mi"
            cpu: 7500m
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'

  - name: pull-kubernetes-e2e-kind-ipv6
    optional: true
    always_run: true
    skip_report: true
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/krte:v20200712-5349a04-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: FOCUS
          value: "."
        # TODO(bentheelder): reduce the skip list further
        - name: SKIP
          value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing
        - name: PARALLEL
          value: "true"
        - name: BUILD_TYPE
          value: bazel
        # enable IPV6 in bootstrap image
        - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
          value: "true"
        # tell kind CI script to use ipv6
        - name: "IP_FAMILY"
          value: "ipv6"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            # TODO(BenTheElder): adjust these everywhere
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'

  - name: pull-kubernetes-e2e-kind-ipv6-canary
    optional: true
    always_run: false # manual for testing new configurations
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/krte:latest-master
        imagePullPolicy: Always # pull latest image for canary testing
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: FOCUS
          value: "."
        # TODO(bentheelder): reduce the skip list further
        - name: SKIP
          value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|LoadBalancer|load.balancer|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing
        - name: PARALLEL
          value: "true"
        - name: BUILD_TYPE
          value: bazel
        # enable IPV6 in bootstrap image
        - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
          value: "true"
        # tell kind CI script to use ipv6
        - name: "IP_FAMILY"
          value: "ipv6"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            # TODO(BenTheElder): adjust these everywhere
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'

  - name: pull-kubernetes-conformance-kind-ga-only
    optional: true
    always_run: false
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decoration_config:
      timeout: 2h # allow plenty of time for a serial conformance run
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/krte:v20200712-5349a04-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: BUILD_TYPE
          value: bazel
        - name: GA_ONLY
          value: "true"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            # TODO(BenTheElder): adjust these everywhere
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
      testgrid-dashboards: sig-testing-kind

  - name: pull-kubernetes-conformance-kind-ga-only-parallel
    always_run: true
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/krte:v20200712-5349a04-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: BUILD_TYPE
          value: bazel
        - name: GA_ONLY
          value: "true"
        - name: PARALLEL
          value: "true"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            # TODO(BenTheElder): adjust these everywhere
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
      testgrid-dashboards: sig-testing-kind
