presets:
- labels:
    preset-azure-windows: "true"
  env:
  - name: WIN_BUILD
    value: https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/build/build-windows-k8s.sh
  - name: KUBE_TEST_REPO_LIST_DOWNLOAD_LOCATION
    value: https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/images/image-repo-list
  - name: K8S_SSH_PUBLIC_KEY_PATH
    value: /etc/ssh-key-secret/ssh-public # from preset-k8s-ssh label
  - name: K8S_SSH_PRIVATE_KEY_PATH
    value: /etc/ssh-key-secret/ssh-private # from preset-k8s-ssh label

presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-e2e-aks-engine-azure-windows
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 3h
    path_alias: k8s.io/kubernetes
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-azure-cred: "true"
      preset-azure-windows: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
        command:
        - runner.sh
        - kubetest
        args:
        # Generic e2e test args
        - --test
        - --up
        - --down
        - --build=quick
        - --dump=$(ARTIFACTS)
        # Azure-specific test args
        - --deployment=aksengine
        - --provider=skeleton
        - --aksengine-admin-username=azureuser
        - --aksengine-admin-password=AdminPassw0rd
        - --aksengine-creds=$(AZURE_CREDENTIALS)
        - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
        - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
        - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
        - --aksengine-winZipBuildScript=$(WIN_BUILD)
        - --aksengine-orchestratorRelease=1.18
        - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_release_staging.json
        - --aksengine-win-binaries
        - --aksengine-deploy-custom-k8s
        - --aksengine-agentpoolcount=2
        # Specific test args
        - --test_args=--node-os-distro=windows --ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]|\[sig-apps\].CronJob|\[sig-api-machinery\].ResourceQuota|\[sig-scheduling\].SchedulerPreemption --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|\[Slow\]|GMSA|Guestbook.application.should.create.and.stop.a.working.application
        - --ginkgo-parallel=4
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-windows, provider-azure-windows, provider-azure-upstream, provider-azure-presubmit
      testgrid-tab-name: pr-aks-engine-azure-windows
      description: Presubmit job for Windows tests on k8s clusters provided by aks-engine (https://github.com/Azure/aks-engine) on Azure cloud
      testgrid-num-columns-recent: '30'
  - name: pull-kubernetes-e2e-azure-disk-windows
    decorate: true
    decoration_config:
      timeout: 2h
    always_run: false
    optional: true
    run_if_changed: 'azure.*\.go$|.*windows\.go$'
    path_alias: k8s.io/kubernetes
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-azure-cred: "true"
      preset-azure-windows: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: azuredisk-csi-driver
      base_ref: master
      path_alias: sigs.k8s.io/azuredisk-csi-driver
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
        command:
        - runner.sh
        - kubetest
        args:
        # Generic e2e test args
        - --test
        - --up
        - --down
        - --build=quick
        - --dump=$(ARTIFACTS)
        # Azure-specific test args
        - --deployment=aksengine
        - --provider=skeleton
        - --aksengine-admin-username=azureuser
        - --aksengine-admin-password=AdminPassw0rd
        - --aksengine-creds=$(AZURE_CREDENTIALS)
        - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
        - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
        - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
        - --aksengine-winZipBuildScript=$(WIN_BUILD)
        - --aksengine-orchestratorRelease=1.18
        - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_in_tree_volume_plugins.json
        - --aksengine-win-binaries
        - --aksengine-deploy-custom-k8s
        - --aksengine-agentpoolcount=2
        # Specific test args
        - --test-azure-disk-csi-driver
        securityContext:
          privileged: true
        env:
        - name: AZURE_STORAGE_DRIVER
          value: kubernetes.io/azure-disk # In-tree Azure disk storage class
        - name: TEST_WINDOWS
          value: "true"
    annotations:
      testgrid-dashboards: provider-azure-windows, provider-azure-upstream, provider-azure-presubmit
      testgrid-tab-name: pr-k8s-azure-disk-e2e-master-windows
      description: Run Azure Disk e2e test with Azure Disk in-tree volume plugin in a Windows cluster.
  - name: pull-kubernetes-e2e-azure-file-windows
    decorate: true
    decoration_config:
      timeout: 2h
    always_run: false
    optional: true
    run_if_changed: 'azure.*\.go$|.*windows\.go$'
    path_alias: k8s.io/kubernetes
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-azure-cred: "true"
      preset-azure-windows: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: azurefile-csi-driver
      base_ref: master
      path_alias: sigs.k8s.io/azurefile-csi-driver
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
        command:
        - runner.sh
        - kubetest
        args:
        # Generic e2e test args
        - --test
        - --up
        - --down
        - --build=quick
        - --dump=$(ARTIFACTS)
        # Azure-specific test args
        - --deployment=aksengine
        - --provider=skeleton
        - --aksengine-admin-username=azureuser
        - --aksengine-admin-password=AdminPassw0rd
        - --aksengine-creds=$(AZURE_CREDENTIALS)
        - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
        - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
        - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
        - --aksengine-winZipBuildScript=$(WIN_BUILD)
        - --aksengine-orchestratorRelease=1.18
        - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_in_tree_volume_plugins.json
        - --aksengine-win-binaries
        - --aksengine-deploy-custom-k8s
        - --aksengine-agentpoolcount=2
        # Specific test args
        - --test-azure-file-csi-driver
        securityContext:
          privileged: true
        env:
        - name: AZURE_STORAGE_DRIVER
          value: kubernetes.io/azure-file # In-tree Azure file storage class
        - name: TEST_WINDOWS
          value: "true"
    annotations:
      testgrid-dashboards: provider-azure-windows, provider-azure-upstream, provider-azure-presubmit
      testgrid-tab-name: pr-k8s-azure-file-e2e-master-windows
      description: Run Azure File e2e test with Azure File in-tree volume plugin in a Windows cluster.
periodics:
# - interval: 24h
#   name: ci-kubernetes-e2e-aks-engine-azure-master-windows
#   decorate: true
#   decoration_config:
#     timeout: 8h
#   labels:
#     preset-service-account: "true"
#     preset-azure-cred: "true"
#     preset-azure-windows: "true"
#     preset-k8s-ssh: "true"
#     preset-dind-enabled: "true"
#   extra_refs:
#   - org: kubernetes
#     repo: kubernetes
#     base_ref: master
#     path_alias: k8s.io/kubernetes
#   spec:
#     containers:
#     - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
#       command:
#       - runner.sh
#       - kubetest
#       args:
#       # Generic e2e test args
#       - --test
#       - --up
#       - --down
#       - --build=quick
#       - --dump=$(ARTIFACTS)
#       # Azure-specific test args
#       - --deployment=aksengine
#       - --provider=skeleton
#       - --aksengine-orchestratorRelease=1.18
#       - --aksengine-admin-username=azureuser
#       - --aksengine-admin-password=AdminPassw0rd
#       - --aksengine-creds=$(AZURE_CREDENTIALS)
#       - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
#       - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
#       - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
#       - --aksengine-winZipBuildScript=$(WIN_BUILD)
#       - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_master.json
#       - --aksengine-win-binaries
#       - --aksengine-deploy-custom-k8s
#       - --aksengine-agentpoolcount=2
#       # Specific test args
#       - --test_args=--node-os-distro=windows --ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]|\[sig-apps\].CronJob|\[sig-api-machinery\].ResourceQuota|\[sig-scheduling\].SchedulerPreemption|\[sig-autoscaling\].\[Feature:HPA\]  --ginkgo.skip=\[LinuxOnly\]|GMSA|Guestbook.application.should.create.and.stop.a.working.application
#       - --ginkgo-parallel=1
#       securityContext:
#         privileged: true
#   annotations:
#     testgrid-dashboards: sig-windows, provider-azure-windows, provider-azure-periodic
#     testgrid-tab-name: aks-engine-azure-windows-master
#     testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
#     description: Runs SIG-Windows release tests on K8s clusters provided by aks-engine (https://github.com/Azure/aks-engine) on Azure cloud
- interval: 8h
  name: ci-kubernetes-e2e-aks-engine-azure-master-staging-windows
  decorate: true
  decoration_config:
    timeout: 3h
  labels:
    preset-service-account: "true"
    preset-azure-cred: "true"
    preset-azure-windows: "true"
    preset-k8s-ssh: "true"
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --test
      - --up
      - --down
      - --build=quick
      - --dump=$(ARTIFACTS)
      # Azure-specific test args
      - --deployment=aksengine
      - --provider=skeleton
      - --aksengine-admin-username=azureuser
      - --aksengine-admin-password=AdminPassw0rd
      - --aksengine-creds=$(AZURE_CREDENTIALS)
      - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
      - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
      - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
      - --aksengine-winZipBuildScript=$(WIN_BUILD)
      - --aksengine-orchestratorRelease=1.18
      - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_release_staging.json
      - --aksengine-win-binaries
      - --aksengine-deploy-custom-k8s
      # Specific test args
      - --test_args=--node-os-distro=windows --ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]|\[sig-apps\].CronJob|\[sig-api-machinery\].ResourceQuota|\[sig-scheduling\].SchedulerPreemption --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|Guestbook.application.should.create.and.stop.a.working.application
      - --ginkgo-parallel=8
      securityContext:
        privileged: true
  annotations:
    testgrid-dashboards: sig-windows, provider-azure-windows, provider-azure-periodic
    testgrid-tab-name: aks-engine-azure-windows-master-staging
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: Staging job for new Windows tests on a Kubernetes cluster provided by aks-engine (https://github.com/Azure/aks-engine) on Azure cloud
- interval: 24h
  name: ci-kubernetes-e2e-aks-engine-azure-master-windows-containerd
  decorate: true
  decoration_config:
    timeout: 3h
  labels:
    preset-service-account: "true"
    preset-azure-cred: "true"
    preset-azure-windows: "true"
    preset-k8s-ssh: "true"
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --test
      - --up
      - --down
      - --build=quick
      - --dump=$(ARTIFACTS)
      # Azure-specific test args
      - --deployment=aksengine
      - --provider=skeleton
      - --aksengine-admin-username=azureuser
      - --aksengine-admin-password=AdminPassw0rd
      - --aksengine-creds=$(AZURE_CREDENTIALS)
      - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
      - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
      - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
      - --aksengine-winZipBuildScript=$(WIN_BUILD)
      - --aksengine-orchestratorRelease=1.18
      - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_containerd.json
      - --aksengine-win-binaries
      - --aksengine-deploy-custom-k8s
      # Specific test args
      - --test_args=--node-os-distro=windows --ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]|\[sig-apps\].CronJob|\[sig-api-machinery\].ResourceQuota|\[sig-scheduling\].SchedulerPreemption --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|\[Slow\]|Guestbook.application.should.create.and.stop.a.working.application
      - --ginkgo-parallel=8
      securityContext:
        privileged: true
  annotations:
    testgrid-dashboards: sig-windows, provider-azure-windows, provider-azure-periodic
    testgrid-tab-name: aks-engine-azure-windows-master-containerd
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: Runs Windows tests on a Kubernetes cluster running containerd provided by aks-engine (https://github.com/Azure/aks-engine) on Azure cloud
- interval: 24h
  name: ci-kubernetes-e2e-aks-engine-azure-master-windows-containerd-serial-slow
  decorate: true
  decoration_config:
    timeout: 5h
  labels:
    preset-service-account: "true"
    preset-azure-cred: "true"
    preset-azure-windows: "true"
    preset-k8s-ssh: "true"
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --test
      - --up
      - --down
      - --build=quick
      - --dump=$(ARTIFACTS)
      # Azure-specific test args
      - --deployment=aksengine
      - --provider=skeleton
      - --aksengine-admin-username=azureuser
      - --aksengine-admin-password=AdminPassw0rd
      - --aksengine-creds=$(AZURE_CREDENTIALS)
      - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
      - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
      - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
      - --aksengine-winZipBuildScript=$(WIN_BUILD)
      - --aksengine-orchestratorRelease=1.18
      - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_containerd.json
      - --aksengine-win-binaries
      - --aksengine-deploy-custom-k8s
      # Specific test args
      - --test_args=--node-os-distro=windows --ginkgo.focus=(\[sig-windows\]|\[sig-scheduling\].SchedulerPreemption|\[sig-autoscaling\].\[Feature:HPA\]|\[sig-apps\].CronJob).*(\[Serial\]|\[Slow\])|(\[Serial\]|\[Slow\]).*(\[Conformance\]|\[NodeConformance\]) --ginkgo.skip=\[LinuxOnly\]
      - --ginkgo-parallel=1
      securityContext:
        privileged: true
  annotations:
    testgrid-dashboards: sig-windows, provider-azure-windows, provider-azure-periodic
    testgrid-tab-name: aks-engine-azure-windows-master-containerd-serial-slow
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: Runs serial Windows tests on a Kubernetes cluster running containerd provided by aks-engine (https://github.com/Azure/aks-engine) on Azure cloud
- interval: 48h
  name: ci-kubernetes-e2e-aks-engine-master-windows-containerd-azuredisk-csi-driver
  decorate: true
  decoration_config:
    timeout: 2h
  labels:
    preset-service-account: "true"
    preset-azure-cred: "true"
    preset-azure-windows: "true"
    preset-k8s-ssh: "true"
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  - org: kubernetes-sigs
    repo: azuredisk-csi-driver
    base_ref: master
    path_alias: sigs.k8s.io/azuredisk-csi-driver
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --test
      - --up
      - --down
      - --build=quick
      - --dump=$(ARTIFACTS)
      # Azure-specific test args
      - --deployment=aksengine
      - --provider=skeleton
      - --aksengine-admin-username=azureuser
      - --aksengine-admin-password=AdminPassw0rd
      - --aksengine-creds=$(AZURE_CREDENTIALS)
      - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
      - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
      - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
      - --aksengine-winZipBuildScript=$(WIN_BUILD)
      - --aksengine-orchestratorRelease=1.18
      - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_containerd.json
      - --aksengine-win-binaries
      - --aksengine-deploy-custom-k8s
      - --aksengine-agentpoolcount=2
      # Specific test args
      - --test-azure-disk-csi-driver
      securityContext:
        privileged: true
      env:
      - name: TEST_WINDOWS
        value: "true"
  annotations:
    testgrid-dashboards: sig-windows, provider-azure-periodic, provider-azure-windows
    testgrid-tab-name: aks-engine-azure-windows-containerd-azuredisk
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: "Run Azure Disk CSI driver E2E tests on a Windows cluster using containerd"
- interval: 48h
  name: ci-kubernetes-e2e-aks-engine-azure-master-windows-containerd-hyperv
  decorate: true
  decoration_config:
    timeout: 3h
  labels:
    preset-service-account: "true"
    preset-azure-cred: "true"
    preset-azure-windows: "true"
    preset-k8s-ssh: "true"
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --test
      - --up
      - --down
      - --build=quick
      - --dump=$(ARTIFACTS)
      # Azure-specific test args
      - --deployment=aksengine
      - --provider=skeleton
      - --aksengine-admin-username=azureuser
      - --aksengine-admin-password=AdminPassw0rd
      - --aksengine-creds=$(AZURE_CREDENTIALS)
      - --aksengine-download-url=https://k8swin.blob.core.windows.net/k8s-windows/aks-engine-ce5c82940-marosset-hyperv.tar.gz
      - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
      - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
      - --aksengine-winZipBuildScript=$(WIN_BUILD)
      - --aksengine-orchestratorRelease=1.18
      - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_containerd_hyperv.json
      - --aksengine-win-binaries
      - --aksengine-deploy-custom-k8s
      # Specific test args
      - --test_args=--node-os-distro=windows --ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]|\[sig-apps\].CronJob|\[sig-api-machinery\].ResourceQuota|\[sig-scheduling\].SchedulerPreemption --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|\[Slow\]|Guestbook.application.should.create.and.stop.a.working.application
      - --ginkgo-parallel=3
      securityContext:
        privileged: true
  annotations:
    testgrid-dashboards: sig-windows, provider-azure-windows, provider-azure-periodic
    testgrid-tab-name: aks-engine-azure-windows-master-containerd-hyperv
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: Runs Windows tests on a Kubernetes cluster running containerd with HyperV isolation provided by aks-engine (https://github.com/Azure/aks-engine) on Azure cloud
- interval: 48h
  name: ci-kubernetes-e2e-aks-engine-azure-master-windows-containerd-hyperv-serial-slow
  decorate: true
  decoration_config:
    timeout: 5h
  labels:
    preset-service-account: "true"
    preset-azure-cred: "true"
    preset-azure-windows: "true"
    preset-k8s-ssh: "true"
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --test
      - --up
      - --down
      - --build=quick
      - --dump=$(ARTIFACTS)
      # Azure-specific test args
      - --deployment=aksengine
      - --provider=skeleton
      - --aksengine-admin-username=azureuser
      - --aksengine-admin-password=AdminPassw0rd
      - --aksengine-creds=$(AZURE_CREDENTIALS)
      - --aksengine-download-url=https://k8swin.blob.core.windows.net/k8s-windows/aks-engine-ce5c82940-marosset-hyperv.tar.gz
      - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
      - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
      - --aksengine-winZipBuildScript=$(WIN_BUILD)
      - --aksengine-orchestratorRelease=1.18
      - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_containerd_hyperv.json
      - --aksengine-win-binaries
      - --aksengine-deploy-custom-k8s
      # Specific test args
      - --test_args=--node-os-distro=windows --ginkgo.focus=(\[sig-windows\]|\[sig-scheduling\].SchedulerPreemption|\[sig-autoscaling\].\[Feature:HPA\]|\[sig-apps\].CronJob).*(\[Serial\]|\[Slow\])|(\[Serial\]|\[Slow\]).*(\[Conformance\]|\[NodeConformance\]) --ginkgo.skip=\[LinuxOnly\]
      - --ginkgo-parallel=1
      securityContext:
        privileged: true
  annotations:
    testgrid-dashboards: sig-windows, provider-azure-windows, provider-azure-periodic
    testgrid-tab-name: aks-engine-azure-windows-master-containerd-hyperv-serial-slow
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: Runs serial Windows tests on a Kubernetes cluster running containerd with HyperV isolation provided by aks-engine (https://github.com/Azure/aks-engine) on Azure cloud
- interval: 48h
  name: ci-kubernetes-e2e-azure-disk-windows
  decorate: true
  decoration_config:
    timeout: 2h
  labels:
    preset-service-account: "true"
    preset-azure-cred: "true"
    preset-azure-windows: "true"
    preset-k8s-ssh: "true"
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  - org: kubernetes-sigs
    repo: azuredisk-csi-driver
    base_ref: master
    path_alias: sigs.k8s.io/azuredisk-csi-driver
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --test
      - --up
      - --down
      - --build=quick
      - --dump=$(ARTIFACTS)
      # Azure-specific test args
      - --deployment=aksengine
      - --provider=skeleton
      - --aksengine-admin-username=azureuser
      - --aksengine-admin-password=AdminPassw0rd
      - --aksengine-creds=$(AZURE_CREDENTIALS)
      - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
      - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
      - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
      - --aksengine-winZipBuildScript=$(WIN_BUILD)
      - --aksengine-orchestratorRelease=1.18
      - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_in_tree_volume_plugins.json
      - --aksengine-win-binaries
      - --aksengine-deploy-custom-k8s
      - --aksengine-agentpoolcount=2
      # Specific test args
      - --test-azure-disk-csi-driver
      securityContext:
        privileged: true
      env:
      - name: AZURE_STORAGE_DRIVER
        value: kubernetes.io/azure-disk # In-tree Azure disk storage class
      - name: TEST_WINDOWS
        value: "true"
  annotations:
    testgrid-dashboards: sig-windows, provider-azure-periodic, provider-azure-windows
    testgrid-tab-name: aks-engine-azure-windows-azure-disk
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: Run Azure Disk e2e test with Azure Disk in-tree volume plugin in a Windows cluster.
- interval: 48h
  name: ci-kubernetes-e2e-azure-file-windows
  decorate: true
  decoration_config:
    timeout: 2h
  labels:
    preset-service-account: "true"
    preset-azure-cred: "true"
    preset-azure-windows: "true"
    preset-k8s-ssh: "true"
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  - org: kubernetes-sigs
    repo: azurefile-csi-driver
    base_ref: master
    path_alias: sigs.k8s.io/azurefile-csi-driver
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --test
      - --up
      - --down
      - --build=quick
      - --dump=$(ARTIFACTS)
      # Azure-specific test args
      - --deployment=aksengine
      - --provider=skeleton
      - --aksengine-admin-username=azureuser
      - --aksengine-admin-password=AdminPassw0rd
      - --aksengine-creds=$(AZURE_CREDENTIALS)
      - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
      - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
      - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
      - --aksengine-winZipBuildScript=$(WIN_BUILD)
      - --aksengine-orchestratorRelease=1.18
      - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_in_tree_volume_plugins.json
      - --aksengine-win-binaries
      - --aksengine-deploy-custom-k8s
      - --aksengine-agentpoolcount=2
      # Specific test args
      - --test-azure-file-csi-driver
      securityContext:
        privileged: true
      env:
      - name: AZURE_STORAGE_DRIVER
        value: kubernetes.io/azure-file # In-tree Azure file storage class
      - name: TEST_WINDOWS
        value: "true"
  annotations:
    testgrid-dashboards: sig-windows, provider-azure-periodic, provider-azure-windows
    testgrid-tab-name: aks-engine-azure-windows-azure-file
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: Run Azure File e2e test with Azure File in-tree volume plugin in a Windows cluster.
- interval: 72h
  name: ci-kubernetes-e2e-aks-engine-azure-master-windows-1903
  decorate: true
  decoration_config:
    timeout: 3h
  labels:
    preset-service-account: "true"
    preset-azure-cred: "true"
    preset-azure-windows: "true"
    preset-k8s-ssh: "true"
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --test
      - --up
      - --down
      - --build=quick
      - --dump=$(ARTIFACTS)
      # Azure-specific test args
      - --deployment=aksengine
      - --provider=skeleton
      - --aksengine-admin-username=azureuser
      - --aksengine-admin-password=AdminPassw0rd
      - --aksengine-creds=$(AZURE_CREDENTIALS)
      - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
      - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
      - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
      - --aksengine-winZipBuildScript=$(WIN_BUILD)
      - --aksengine-orchestratorRelease=1.18
      - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_1903_master.json
      - --aksengine-win-binaries
      - --aksengine-deploy-custom-k8s
      - --aksengine-agentpoolcount=2
      # Specific test args
      - --test_args=--ginkgo.flakeAttempts=2 --node-os-distro=windows --ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]|\[sig-apps\].CronJob|\[sig-api-machinery\].ResourceQuota|\[sig-scheduling\].SchedulerPreemption|\[sig-autoscaling\].\[Feature:HPA\]  --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|GMSA|Guestbook.application.should.create.and.stop.a.working.application
      - --ginkgo-parallel=6
      securityContext:
        privileged: true
  annotations:
    testgrid-dashboards: sig-windows, provider-azure-windows, provider-azure-periodic
    testgrid-tab-name: aks-engine-azure-windows-1903-master
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: Runs SIG-Windows release tests on K8s clusters provided by aks-engine (https://github.com/Azure/aks-engine) on Azure cloud
- interval: 24h
  name: ci-kubernetes-e2e-aks-engine-azure-master-windows-1909
  decorate: true
  decoration_config:
    timeout: 3h
  labels:
    preset-service-account: "true"
    preset-azure-windows: "true"
    preset-azure-cred: "true"
    preset-k8s-ssh: "true"
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --test
      - --up
      - --down
      - --build=quick
      - --dump=$(ARTIFACTS)
      # Azure-specific test args
      - --deployment=aksengine
      - --provider=skeleton
      - --aksengine-admin-username=azureuser
      - --aksengine-admin-password=AdminPassw0rd
      - --aksengine-creds=$(AZURE_CREDENTIALS)
      - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
      - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
      - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
      - --aksengine-winZipBuildScript=$(WIN_BUILD)
      - --aksengine-orchestratorRelease=1.18
      - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_1909_master.json
      - --aksengine-win-binaries
      - --aksengine-deploy-custom-k8s
      - --aksengine-agentpoolcount=2
      # Specific test args
      - --test_args=--ginkgo.flakeAttempts=2 --node-os-distro=windows --ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]|\[sig-apps\].CronJob|\[sig-api-machinery\].ResourceQuota|\[sig-scheduling\].SchedulerPreemption|\[sig-autoscaling\].\[Feature:HPA\]  --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|GMSA|Guestbook.application.should.create.and.stop.a.working.application
      - --ginkgo-parallel=6
      securityContext:
        privileged: true
  annotations:
    testgrid-dashboards: sig-windows, provider-azure-periodic, provider-azure-windows
    testgrid-tab-name: aks-engine-azure-windows-1909-master
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: Runs SIG-Windows release tests on K8s clusters provided by aks-engine (https://github.com/Azure/aks-engine) on Azure cloud
- interval: 24h
  name: ci-kubernetes-e2e-aks-engine-azure-master-windows-2004
  decorate: true
  decoration_config:
    timeout: 3h
  labels:
    preset-service-account: "true"
    preset-azure-windows: "true"
    preset-azure-cred: "true"
    preset-k8s-ssh: "true"
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200710-6b3b6fe-master
      command:
      - runner.sh
      - kubetest
      args:
      # Generic e2e test args
      - --test
      - --up
      - --down
      - --build=quick
      - --dump=$(ARTIFACTS)
      # Azure-specific test args
      - --deployment=aksengine
      - --provider=skeleton
      - --aksengine-admin-username=azureuser
      - --aksengine-admin-password=AdminPassw0rd
      - --aksengine-creds=$(AZURE_CREDENTIALS)
      - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
      - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
      - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
      - --aksengine-winZipBuildScript=$(WIN_BUILD)
      - --aksengine-orchestratorRelease=1.18
      - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_2004_master.json
      - --aksengine-win-binaries
      - --aksengine-deploy-custom-k8s
      - --aksengine-agentpoolcount=2
      # Specific test args
      - --test_args=--ginkgo.flakeAttempts=2 --node-os-distro=windows --ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]|\[sig-apps\].CronJob|\[sig-api-machinery\].ResourceQuota|\[sig-scheduling\].SchedulerPreemption|\[sig-autoscaling\].\[Feature:HPA\]  --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|GMSA|Guestbook.application.should.create.and.stop.a.working.application
      - --ginkgo-parallel=6
      securityContext:
        privileged: true
  annotations:
    testgrid-dashboards: sig-windows, provider-azure-periodic, provider-azure-windows
    testgrid-tab-name: aks-engine-azure-windows-2004-master
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: Runs SIG-Windows release tests on K8s clusters provided by aks-engine (https://github.com/Azure/aks-engine) on Azure cloud
